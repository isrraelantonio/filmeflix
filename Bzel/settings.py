"""
Django settings for Bzel project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path # define o diretório bae de onde stá o seu projeto   --- biblioteca path que indica onde está o seu porjeto que no caso é o nosso Bzel

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-17^!0etr89fk$tqp!go-(h(79#(#ietbpxd-6m%%azi320b0mc'
# Chave de segurança do seu projeto que irá gerenciar várias coisas de segurança

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # executa automáticaticamente refletida no site

ALLOWED_HOSTS = ["*"] # hosts permitidos


# Application definition

INSTALLED_APPS = [ # apps já instalados e que vamos instalar
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'filme',
    'crispy_forms',
    'crispy_bootstrap5',
]

MIDDLEWARE = [ # projetos de meio de caminho para algumas verificações  importantes de trânsitaçaõ de dados e de usuários.
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Bzel.urls' # indica qual é o arquivo que tem todos os seus links que no caso é a pasta url presente em Bzel onde iremos adicionar aos poucos os nossos links de apps 

TEMPLATES = [ #Aqui vamos indicar os arquivos dos nosso htmls
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'filme.novos_context.lista_filmes_recentes',
                'filme.novos_context.lista_filmes_emalta',
                

            ],
        },
    },
]

WSGI_APPLICATION = 'Bzel.wsgi.application' # servidores 


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {  # nosso banco de dados 
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
import dj_database_url
import os
DATABASE_URL = os.getenv("DATABASE_URL")
if  DATABASE_URL:
    DATABASES = {
        'default':  dj_database_url.config(default = DATABASE_URL, conn_max_age=1800)  
    }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_USER_MODEL = "filme.Usuario"  # Esse é o nosso modelo dentro do nosso app, no caso a nossa classe do nosso modelsss 

AUTH_PASSWORD_VALIDATORS = [ # Validações de senha para criação de senas do usuários
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'  #lingua adiministrativa 

TIME_ZONE = 'America/Sao_Paulo' # Zona administrativa

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/' #Aqui é o endereço de onde ficam as nossas imagens para  o nosso site além dass nossas folhas de estilo.
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / "media"


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField' # cria id automáticamente definindo uma chave primária paracada uma das tabelas. O mesmo segue os padrões para bancos de dados.

LOGIN_REDIRECT_URL = 'filme:homefilmes' #para onde irei ser direcionado ao fazer o meu ligin 
LOGIN_URL = 'filme:login'   #Pagina para fazer login 
CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap5'
CRISPY_TEMPLATE_PACK = 'bootstrap5'